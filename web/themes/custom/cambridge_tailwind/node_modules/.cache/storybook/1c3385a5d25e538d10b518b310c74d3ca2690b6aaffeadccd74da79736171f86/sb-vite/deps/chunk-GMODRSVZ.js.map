{
  "version": 3,
  "sources": ["../../../../../drupal-attribute/src/index.js"],
  "sourcesContent": ["class DrupalAttribute extends Map {\n  constructor(it) {\n    super(it);\n  }\n\n  /**\n   * @param {...String|Array} args\n   * @returns {DrupalAttribute}\n   */\n  addClass(args) {\n    let self = this;\n    let values = [];\n\n    for (let i = 0; i < arguments.length; i++) {\n      values.push(arguments[i]);\n    }\n\n    values.forEach(function (value) {\n      if (!Array.isArray(value)) {\n        value = [value];\n      }\n\n      if (!self.has('class')) {\n        self.setAttribute('class', []);\n      }\n\n      let classes = self.get('class');\n\n      value.forEach(function (d) {\n        if (classes.indexOf(d) < 0) {\n          classes.push(d);\n        }\n      });\n    });\n\n    return this;\n  }\n\n  removeClass(value) {\n    let classes = [];\n\n    if (this.has('class')) {\n      classes = this.get('class');\n    }\n\n    if (!Array.isArray(value)) {\n      value = [value];\n    }\n\n    value.forEach(function (v) {\n      let index = classes.indexOf(v);\n\n      if (index > -1) {\n        classes.splice(index, 1);\n      }\n    });\n\n    return this;\n  }\n\n  hasClass(value) {\n    let classes = [];\n\n    if (this.has('class')) {\n      classes = this.get('class');\n    }\n\n    return (classes.indexOf(value) > -1);\n  }\n\n  setAttribute(key, value) {\n    this.set(key, value);\n\n    return this;\n  }\n\n  removeAttribute(key) {\n    this.delete(key);\n\n    return this;\n  }\n\n  toString() {\n    let result = '';\n    let components = [];\n\n    this.forEach(function (value, key) {\n      if (Array.isArray(value)) {\n        value = value.join(' ');\n      }\n\n      components.push([key, '\"' + value + '\"'].join('='));\n    });\n\n    let rendered = components.join(' ');\n\n    if (rendered) {\n      result += ' ' + rendered;\n    }\n\n    return result;\n  }\n\n  /**\n   * Merge another DrupalAttribute instance into this one.\n   * @param {DrupalAttribute} collection\n   * @returns {DrupalAttribute}\n  */\n  merge(collection) {\n    // Convert both the current attributes and the input collection's attributes to plain objects.\n    let currentAttributes = Object.fromEntries(this);\n    let newAttributes = Object.fromEntries(collection);\n\n    // Perform a deep merge.\n    let mergedAttributes = this.mergeDeep(currentAttributes, newAttributes);\n\n    // Clear the current Map and set the merged attributes.\n    this.clear();\n    for (let key in mergedAttributes) {\n      this.set(key, mergedAttributes[key]);\n    }\n\n    return this;\n  }\n  \n  // Helper function for deep merging.\n  mergeDeep(target, source) {\n    for (let key in source) {\n      if (source[key] instanceof Array) {\n        if (!target[key]) target[key] = [];\n        target[key] = Array.from(new Set(target[key].concat(source[key])));\n      } else if (source[key] instanceof Object) {\n        if (!target[key]) target[key] = {};\n        Object.assign(source[key], this.mergeDeep(target[key], source[key]));\n      } else {\n        target[key] = source[key];\n      }\n    }\n    return target;\n  }\n}\n\nmodule.exports = DrupalAttribute;\n"],
  "mappings": "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",
  "names": []
}
